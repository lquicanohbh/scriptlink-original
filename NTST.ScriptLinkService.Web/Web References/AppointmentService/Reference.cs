//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace NTST.ScriptLinkService.Web.AppointmentService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AppointmentSoap", Namespace="http://ntst.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseClass))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Response))]
    public partial class Appointment : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAppointmentsByDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoStaffAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostedAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnVerifiedAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVerifiedAppointmentsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Appointment() {
            this.Url = global::NTST.ScriptLinkService.Web.Properties.Settings.Default.NTST_ScriptLinkService_Web_AppointmentService_Appointment;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAppointmentsByDateTimeCompletedEventHandler GetAppointmentsByDateTimeCompleted;
        
        /// <remarks/>
        public event GetClientAppointmentsCompletedEventHandler GetClientAppointmentsCompleted;
        
        /// <remarks/>
        public event GetCoStaffAppointmentsCompletedEventHandler GetCoStaffAppointmentsCompleted;
        
        /// <remarks/>
        public event GetGroupAppointmentsCompletedEventHandler GetGroupAppointmentsCompleted;
        
        /// <remarks/>
        public event GetPostedAppointmentsCompletedEventHandler GetPostedAppointmentsCompleted;
        
        /// <remarks/>
        public event GetSiteAppointmentsCompletedEventHandler GetSiteAppointmentsCompleted;
        
        /// <remarks/>
        public event GetStaffAppointmentsCompletedEventHandler GetStaffAppointmentsCompleted;
        
        /// <remarks/>
        public event GetUnVerifiedAppointmentsCompletedEventHandler GetUnVerifiedAppointmentsCompleted;
        
        /// <remarks/>
        public event GetVerifiedAppointmentsCompletedEventHandler GetVerifiedAppointmentsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetAppointmentsByDateTime" +
            "", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetAppointmentsByDateTime(LoginInfo loginInfo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startDateSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool endDateSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime startTime, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime endTime, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool endTimeSpecified) {
            object[] results = this.Invoke("GetAppointmentsByDateTime", new object[] {
                        loginInfo,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppointmentsByDateTimeAsync(LoginInfo loginInfo, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified) {
            this.GetAppointmentsByDateTimeAsync(loginInfo, startDate, startDateSpecified, endDate, endDateSpecified, startTime, startTimeSpecified, endTime, endTimeSpecified, null);
        }
        
        /// <remarks/>
        public void GetAppointmentsByDateTimeAsync(LoginInfo loginInfo, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, object userState) {
            if ((this.GetAppointmentsByDateTimeOperationCompleted == null)) {
                this.GetAppointmentsByDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppointmentsByDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetAppointmentsByDateTime", new object[] {
                        loginInfo,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified}, this.GetAppointmentsByDateTimeOperationCompleted, userState);
        }
        
        private void OnGetAppointmentsByDateTimeOperationCompleted(object arg) {
            if ((this.GetAppointmentsByDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppointmentsByDateTimeCompleted(this, new GetAppointmentsByDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetClientAppointments", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetClientAppointments(LoginInfo loginInfo, string clientId) {
            object[] results = this.Invoke("GetClientAppointments", new object[] {
                        loginInfo,
                        clientId});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAppointmentsAsync(LoginInfo loginInfo, string clientId) {
            this.GetClientAppointmentsAsync(loginInfo, clientId, null);
        }
        
        /// <remarks/>
        public void GetClientAppointmentsAsync(LoginInfo loginInfo, string clientId, object userState) {
            if ((this.GetClientAppointmentsOperationCompleted == null)) {
                this.GetClientAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetClientAppointments", new object[] {
                        loginInfo,
                        clientId}, this.GetClientAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetClientAppointmentsOperationCompleted(object arg) {
            if ((this.GetClientAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientAppointmentsCompleted(this, new GetClientAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetCoStaffAppointments", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetCoStaffAppointments(LoginInfo loginInfo, string coStaffId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startDateSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool endDateSpecified) {
            object[] results = this.Invoke("GetCoStaffAppointments", new object[] {
                        loginInfo,
                        coStaffId,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoStaffAppointmentsAsync(LoginInfo loginInfo, string coStaffId, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified) {
            this.GetCoStaffAppointmentsAsync(loginInfo, coStaffId, startDate, startDateSpecified, endDate, endDateSpecified, null);
        }
        
        /// <remarks/>
        public void GetCoStaffAppointmentsAsync(LoginInfo loginInfo, string coStaffId, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified, object userState) {
            if ((this.GetCoStaffAppointmentsOperationCompleted == null)) {
                this.GetCoStaffAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoStaffAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetCoStaffAppointments", new object[] {
                        loginInfo,
                        coStaffId,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified}, this.GetCoStaffAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetCoStaffAppointmentsOperationCompleted(object arg) {
            if ((this.GetCoStaffAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoStaffAppointmentsCompleted(this, new GetCoStaffAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetGroupAppointments", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetGroupAppointments(LoginInfo loginInfo, string groupCode) {
            object[] results = this.Invoke("GetGroupAppointments", new object[] {
                        loginInfo,
                        groupCode});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupAppointmentsAsync(LoginInfo loginInfo, string groupCode) {
            this.GetGroupAppointmentsAsync(loginInfo, groupCode, null);
        }
        
        /// <remarks/>
        public void GetGroupAppointmentsAsync(LoginInfo loginInfo, string groupCode, object userState) {
            if ((this.GetGroupAppointmentsOperationCompleted == null)) {
                this.GetGroupAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetGroupAppointments", new object[] {
                        loginInfo,
                        groupCode}, this.GetGroupAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetGroupAppointmentsOperationCompleted(object arg) {
            if ((this.GetGroupAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupAppointmentsCompleted(this, new GetGroupAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetPostedAppointments", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetPostedAppointments(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startDateSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool endDateSpecified) {
            object[] results = this.Invoke("GetPostedAppointments", new object[] {
                        loginInfo,
                        clientId,
                        staffId,
                        coStaffId,
                        groupCode,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostedAppointmentsAsync(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified) {
            this.GetPostedAppointmentsAsync(loginInfo, clientId, staffId, coStaffId, groupCode, startDate, startDateSpecified, endDate, endDateSpecified, null);
        }
        
        /// <remarks/>
        public void GetPostedAppointmentsAsync(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified, object userState) {
            if ((this.GetPostedAppointmentsOperationCompleted == null)) {
                this.GetPostedAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostedAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetPostedAppointments", new object[] {
                        loginInfo,
                        clientId,
                        staffId,
                        coStaffId,
                        groupCode,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified}, this.GetPostedAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetPostedAppointmentsOperationCompleted(object arg) {
            if ((this.GetPostedAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostedAppointmentsCompleted(this, new GetPostedAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetSiteAppointments", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetSiteAppointments(LoginInfo loginInfo, string site) {
            object[] results = this.Invoke("GetSiteAppointments", new object[] {
                        loginInfo,
                        site});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteAppointmentsAsync(LoginInfo loginInfo, string site) {
            this.GetSiteAppointmentsAsync(loginInfo, site, null);
        }
        
        /// <remarks/>
        public void GetSiteAppointmentsAsync(LoginInfo loginInfo, string site, object userState) {
            if ((this.GetSiteAppointmentsOperationCompleted == null)) {
                this.GetSiteAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetSiteAppointments", new object[] {
                        loginInfo,
                        site}, this.GetSiteAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetSiteAppointmentsOperationCompleted(object arg) {
            if ((this.GetSiteAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteAppointmentsCompleted(this, new GetSiteAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetStaffAppointments", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetStaffAppointments(LoginInfo loginInfo, string staffId) {
            object[] results = this.Invoke("GetStaffAppointments", new object[] {
                        loginInfo,
                        staffId});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffAppointmentsAsync(LoginInfo loginInfo, string staffId) {
            this.GetStaffAppointmentsAsync(loginInfo, staffId, null);
        }
        
        /// <remarks/>
        public void GetStaffAppointmentsAsync(LoginInfo loginInfo, string staffId, object userState) {
            if ((this.GetStaffAppointmentsOperationCompleted == null)) {
                this.GetStaffAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetStaffAppointments", new object[] {
                        loginInfo,
                        staffId}, this.GetStaffAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetStaffAppointmentsOperationCompleted(object arg) {
            if ((this.GetStaffAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffAppointmentsCompleted(this, new GetStaffAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetUnVerifiedAppointments" +
            "", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetUnVerifiedAppointments(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startDateSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool endDateSpecified) {
            object[] results = this.Invoke("GetUnVerifiedAppointments", new object[] {
                        loginInfo,
                        clientId,
                        staffId,
                        coStaffId,
                        groupCode,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnVerifiedAppointmentsAsync(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified) {
            this.GetUnVerifiedAppointmentsAsync(loginInfo, clientId, staffId, coStaffId, groupCode, startDate, startDateSpecified, endDate, endDateSpecified, null);
        }
        
        /// <remarks/>
        public void GetUnVerifiedAppointmentsAsync(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified, object userState) {
            if ((this.GetUnVerifiedAppointmentsOperationCompleted == null)) {
                this.GetUnVerifiedAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnVerifiedAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetUnVerifiedAppointments", new object[] {
                        loginInfo,
                        clientId,
                        staffId,
                        coStaffId,
                        groupCode,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified}, this.GetUnVerifiedAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetUnVerifiedAppointmentsOperationCompleted(object arg) {
            if ((this.GetUnVerifiedAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnVerifiedAppointmentsCompleted(this, new GetUnVerifiedAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ntst.com/WSAPI.PM.Appointment.AppointmentService.GetVerifiedAppointments", RequestNamespace="http://ntst.com", ResponseNamespace="http://ntst.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentResponse GetVerifiedAppointments(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startDateSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool endDateSpecified) {
            object[] results = this.Invoke("GetVerifiedAppointments", new object[] {
                        loginInfo,
                        clientId,
                        staffId,
                        coStaffId,
                        groupCode,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified});
            return ((AppointmentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetVerifiedAppointmentsAsync(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified) {
            this.GetVerifiedAppointmentsAsync(loginInfo, clientId, staffId, coStaffId, groupCode, startDate, startDateSpecified, endDate, endDateSpecified, null);
        }
        
        /// <remarks/>
        public void GetVerifiedAppointmentsAsync(LoginInfo loginInfo, string clientId, string staffId, string coStaffId, string groupCode, System.DateTime startDate, bool startDateSpecified, System.DateTime endDate, bool endDateSpecified, object userState) {
            if ((this.GetVerifiedAppointmentsOperationCompleted == null)) {
                this.GetVerifiedAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVerifiedAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetVerifiedAppointments", new object[] {
                        loginInfo,
                        clientId,
                        staffId,
                        coStaffId,
                        groupCode,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified}, this.GetVerifiedAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetVerifiedAppointmentsOperationCompleted(object arg) {
            if ((this.GetVerifiedAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVerifiedAppointmentsCompleted(this, new GetVerifiedAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ntst.com")]
    public partial class LoginInfo {
        
        private string systemCodeField;
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string systemCode {
            get {
                return this.systemCodeField;
            }
            set {
                this.systemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClientObjectWithEpisode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PairOfclientKeyClientObjectWithEpisode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AppointmentObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PairOfappointmentKeyAppointmentObject))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ntst.com")]
    public partial class ResponseClass {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PairOfclientKeyClientObjectWithEpisode))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ntst.com")]
    public partial class ClientObjectWithEpisode : ResponseClass {
        
        private string admissionDateField;
        
        private string dischargeDateField;
        
        private long episodeNumberField;
        
        private bool episodeNumberFieldSpecified;
        
        private string programField;
        
        private string typeField;
        
        private string addressCityField;
        
        private string addressCountryField;
        
        private string addressCountyField;
        
        private string addressStateField;
        
        private string addressStreetField;
        
        private string addressStreet2Field;
        
        private string addressZipField;
        
        private string aliasField;
        
        private string cellPhoneField;
        
        private string clientIdField;
        
        private string commPreferenceField;
        
        private string dateOfBirthField;
        
        private string emailField;
        
        private string empStatusField;
        
        private string fcnField;
        
        private string homePhoneField;
        
        private string maidenNameField;
        
        private string maritalStatusField;
        
        private string nameField;
        
        private string occupationField;
        
        private byte[] pictureField;
        
        private string primLangField;
        
        private string sexField;
        
        private string ssnField;
        
        private string workPhoneField;
        
        /// <remarks/>
        public string admissionDate {
            get {
                return this.admissionDateField;
            }
            set {
                this.admissionDateField = value;
            }
        }
        
        /// <remarks/>
        public string dischargeDate {
            get {
                return this.dischargeDateField;
            }
            set {
                this.dischargeDateField = value;
            }
        }
        
        /// <remarks/>
        public long episodeNumber {
            get {
                return this.episodeNumberField;
            }
            set {
                this.episodeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool episodeNumberSpecified {
            get {
                return this.episodeNumberFieldSpecified;
            }
            set {
                this.episodeNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string program {
            get {
                return this.programField;
            }
            set {
                this.programField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string addressCity {
            get {
                return this.addressCityField;
            }
            set {
                this.addressCityField = value;
            }
        }
        
        /// <remarks/>
        public string addressCountry {
            get {
                return this.addressCountryField;
            }
            set {
                this.addressCountryField = value;
            }
        }
        
        /// <remarks/>
        public string addressCounty {
            get {
                return this.addressCountyField;
            }
            set {
                this.addressCountyField = value;
            }
        }
        
        /// <remarks/>
        public string addressState {
            get {
                return this.addressStateField;
            }
            set {
                this.addressStateField = value;
            }
        }
        
        /// <remarks/>
        public string addressStreet {
            get {
                return this.addressStreetField;
            }
            set {
                this.addressStreetField = value;
            }
        }
        
        /// <remarks/>
        public string addressStreet2 {
            get {
                return this.addressStreet2Field;
            }
            set {
                this.addressStreet2Field = value;
            }
        }
        
        /// <remarks/>
        public string addressZip {
            get {
                return this.addressZipField;
            }
            set {
                this.addressZipField = value;
            }
        }
        
        /// <remarks/>
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public string cellPhone {
            get {
                return this.cellPhoneField;
            }
            set {
                this.cellPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string clientId {
            get {
                return this.clientIdField;
            }
            set {
                this.clientIdField = value;
            }
        }
        
        /// <remarks/>
        public string commPreference {
            get {
                return this.commPreferenceField;
            }
            set {
                this.commPreferenceField = value;
            }
        }
        
        /// <remarks/>
        public string dateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string empStatus {
            get {
                return this.empStatusField;
            }
            set {
                this.empStatusField = value;
            }
        }
        
        /// <remarks/>
        public string fcn {
            get {
                return this.fcnField;
            }
            set {
                this.fcnField = value;
            }
        }
        
        /// <remarks/>
        public string homePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string maidenName {
            get {
                return this.maidenNameField;
            }
            set {
                this.maidenNameField = value;
            }
        }
        
        /// <remarks/>
        public string maritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] picture {
            get {
                return this.pictureField;
            }
            set {
                this.pictureField = value;
            }
        }
        
        /// <remarks/>
        public string primLang {
            get {
                return this.primLangField;
            }
            set {
                this.primLangField = value;
            }
        }
        
        /// <remarks/>
        public string sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string ssn {
            get {
                return this.ssnField;
            }
            set {
                this.ssnField = value;
            }
        }
        
        /// <remarks/>
        public string workPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ntst.com")]
    public partial class PairOfclientKeyClientObjectWithEpisode : ClientObjectWithEpisode {
        
        private string clientKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string clientKey {
            get {
                return this.clientKeyField;
            }
            set {
                this.clientKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PairOfappointmentKeyAppointmentObject))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ntst.com")]
    public partial class AppointmentObject : ResponseClass {
        
        private PairOfclientKeyClientObjectWithEpisode[] clientField;
        
        private string coStaffDurationField;
        
        private string coStaffIdField;
        
        private string dateField;
        
        private string durationField;
        
        private string endTimeField;
        
        private string isConfirmedField;
        
        private string isMissedField;
        
        private string locationField;
        
        private string programField;
        
        private string secoStaffDurationField;
        
        private string secoStaffIdField;
        
        private string serviceCodeField;
        
        private string siteField;
        
        private string staffIdField;
        
        private string startTimeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Clients")]
        public PairOfclientKeyClientObjectWithEpisode[] client {
            get {
                return this.clientField;
            }
            set {
                this.clientField = value;
            }
        }
        
        /// <remarks/>
        public string coStaffDuration {
            get {
                return this.coStaffDurationField;
            }
            set {
                this.coStaffDurationField = value;
            }
        }
        
        /// <remarks/>
        public string coStaffId {
            get {
                return this.coStaffIdField;
            }
            set {
                this.coStaffIdField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public string endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string isConfirmed {
            get {
                return this.isConfirmedField;
            }
            set {
                this.isConfirmedField = value;
            }
        }
        
        /// <remarks/>
        public string isMissed {
            get {
                return this.isMissedField;
            }
            set {
                this.isMissedField = value;
            }
        }
        
        /// <remarks/>
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string program {
            get {
                return this.programField;
            }
            set {
                this.programField = value;
            }
        }
        
        /// <remarks/>
        public string secoStaffDuration {
            get {
                return this.secoStaffDurationField;
            }
            set {
                this.secoStaffDurationField = value;
            }
        }
        
        /// <remarks/>
        public string secoStaffId {
            get {
                return this.secoStaffIdField;
            }
            set {
                this.secoStaffIdField = value;
            }
        }
        
        /// <remarks/>
        public string serviceCode {
            get {
                return this.serviceCodeField;
            }
            set {
                this.serviceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public string staffId {
            get {
                return this.staffIdField;
            }
            set {
                this.staffIdField = value;
            }
        }
        
        /// <remarks/>
        public string startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ntst.com")]
    public partial class PairOfappointmentKeyAppointmentObject : AppointmentObject {
        
        private string appointmentKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string appointmentKey {
            get {
                return this.appointmentKeyField;
            }
            set {
                this.appointmentKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AppointmentResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ntst.com")]
    public partial class Response {
        
        private string resultCodeField;
        
        private string resultMessageField;
        
        /// <remarks/>
        public string resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string resultMessage {
            get {
                return this.resultMessageField;
            }
            set {
                this.resultMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ntst.com")]
    public partial class AppointmentResponse : Response {
        
        private PairOfappointmentKeyAppointmentObject[] appointmentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("AppointmentObjects")]
        public PairOfappointmentKeyAppointmentObject[] appointment {
            get {
                return this.appointmentField;
            }
            set {
                this.appointmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAppointmentsByDateTimeCompletedEventHandler(object sender, GetAppointmentsByDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppointmentsByDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppointmentsByDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetClientAppointmentsCompletedEventHandler(object sender, GetClientAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCoStaffAppointmentsCompletedEventHandler(object sender, GetCoStaffAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoStaffAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoStaffAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGroupAppointmentsCompletedEventHandler(object sender, GetGroupAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPostedAppointmentsCompletedEventHandler(object sender, GetPostedAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostedAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostedAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteAppointmentsCompletedEventHandler(object sender, GetSiteAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStaffAppointmentsCompletedEventHandler(object sender, GetStaffAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUnVerifiedAppointmentsCompletedEventHandler(object sender, GetUnVerifiedAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnVerifiedAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnVerifiedAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetVerifiedAppointmentsCompletedEventHandler(object sender, GetVerifiedAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVerifiedAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVerifiedAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591